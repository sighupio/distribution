# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

name: qa
kind: pipeline
type: docker

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

steps:
  - name: license-check
    image: quay.io/sighup/golang:1.21.5
    pull: always
    commands:
      - make license-check

  - name: schema-check
    image: quay.io/sighup/golang:1.21.5
    pull: always
    commands:
      - |-
        cat schemas/public/ekscluster-kfd-v1alpha2.json | \
        json-patch -p schemas/private/ekscluster-kfd-v1alpha2.patch.json | \
        jq -r > /tmp/schemas-private-ekscluster-kfd-v1alpha2.json
      - diff schemas/private/ekscluster-kfd-v1alpha2.json /tmp/schemas-private-ekscluster-kfd-v1alpha2.json

  - name: lint
    image: quay.io/sighup/policeman
    pull: always
    environment:
      # Identifies false positives like missing 'selector'.
      # Doing this is valid for Kustomize patches
      VALIDATE_KUBERNETES_KUBEVAL: "false"
      # Some duplicated code is intended.
      VALIDATE_JSCPD: "false"
      # Disable natural language checks
      VALIDATE_NATURAL_LANGUAGE: "false"
      # Disable go linting, we use the one included in the go image
      VALIDATE_GO: "false"
      # Exclude template files from linting. The linter does not understand Go template.
      FILTER_REGEX_EXCLUDE: (templates/)
    depends_on:
      - license-check
      - schema-check

  - name: lint-go
    image: quay.io/sighup/golang:1.21.5
    pull: always
    commands:
      - make lint-go
    depends_on:
      - license-check
      - schema-check

  - name: test-schema
    # KUBECTL 1.25.3 - KUSTOMIZE 3.5.3 - HELM 3.1.1 - YQ 4.21.1 - ISTIOCTL 1.9.4 - FURYCTL 0.9.0 - BATS 1.1.0
    image: quay.io/sighup/e2e-testing:1.1.0_0.9.0_3.1.1_1.9.4_1.25.3_3.5.3_4.21.1
    pull: always
    depends_on:
      - license-check
      - schema-check
    commands:
      - bats -t tests/schema.sh

  - name: render
    # KUBECTL 1.25.3 - KUSTOMIZE 3.5.3 - HELM 3.1.1 - YQ 4.21.1 - ISTIOCTL 1.9.4 - FURYCTL 0.9.0 - BATS 1.1.0
    image: quay.io/sighup/e2e-testing:1.1.0_0.9.0_3.1.1_1.9.4_1.25.3_3.5.3_4.21.1
    pull: always
    commands:
      - echo $${NETRC_FILE} > /root/.netrc
      - furyctl vendor -H
      - kustomize build . > distribution.yml
    environment:
      NETRC_FILE:
        from_secret: NETRC_FILE
    depends_on:
      - license-check
      - schema-check

  - name: check-deprecated-apis
    image: us-docker.pkg.dev/fairwinds-ops/oss/pluto:v5
    pull: always
    depends_on:
      - render
    commands:
      # we use --ignore-deprecations because we don't want the CI to fail when the API has not been removed yet.
      - /pluto detect distribution.yml --ignore-deprecations --target-versions=k8s=v1.27.0

---
name: e2e-kubernetes-1.27
kind: pipeline
type: docker

depends_on:
  - qa

clone:
  depth: 1

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**
      - refs/heads/main
      - refs/heads/release-v**
    exclude:
      - refs/tags/**-docs*

steps:
  - name: create Kind cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    pull: always
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_VERSION: v1.27.3
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}
      # /drone/src is the default workdir for the pipeline
      # using this folder we don't need to mount another
      # shared volume between the steps
      KUBECONFIG: /drone/src/kubeconfig
    commands:
      # create a custom config to disable Kind's default CNI so
      # we can test using KFD's networking module.
      - |
        cat <<EOF > kind-config.yaml
        kind: Cluster
        apiVersion: kind.x-k8s.io/v1alpha4
        networking:
          disableDefaultCNI: true
        nodes:
          - role: control-plane
          - role: worker
        EOF
      # NOTE: kind's `--wait` flag that waits for the control-plane ot be ready
      # does not work when disabling the default CNI. It will always go in timeout.
      - kind create cluster --name $${CLUSTER_NAME} --image registry.sighup.io/fury/kindest/node:$${CLUSTER_VERSION} --config kind-config.yaml
      # save the kubeconfig so we can use it from other steps.
      - kind get kubeconfig --name $${CLUSTER_NAME} > $${KUBECONFIG}

  - name: e2e-kfddistribution
    # KUBECTL_KUSTOMIZE_HELM_YQ_ISTIOCTL_FURYCTL_BATS
    image: quay.io/sighup/e2e-testing:1.1.0_0.11.0_3.1.1_1.9.4_1.26.3_3.5.3_4.33.3
    pull: always
    # we need to use host network to access Kind API port that is listening on the worker's loopback
    # beacuse we mount the host's Docker socket to run Kind.
    network_mode: host
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}
      KUBECONFIG: /drone/src/kubeconfig
      FURYCTL_VERSION: v0.27.6
    depends_on: [create Kind cluster]
    commands:
      - export KUBECONFIG=/drone/src/kubeconfig
      # We change the loopback IP in the kubeconfig to use the service hostname and keep the port.
      # - 'sed -Ei "s#(server: https://)(.*)(:.*)#\1kind-cluster\3#" $${KUBECONFIG}'
      - echo "Installing the correct furyctl version..."
      - curl -L "https://github.com/sighupio/furyctl/releases/download/$${FURYCTL_VERSION}/furyctl-$(uname -s)-amd64.tar.gz" -o /tmp/furyctl.tar.gz && tar xfz /tmp/furyctl.tar.gz -C /tmp
      # to use furyctl latest, use the following instead:
      # - curl -L "https://github.com/sighupio/furyctl/releases/latest/download/furyctl-$(uname -s)-amd64.tar.gz" -o /tmp/furyctl.tar.gz && tar xfz /tmp/furyctl.tar.gz -C /tmp
      - chmod +x /tmp/furyctl
      # check that the kind cluster is ready before we move on
      # - kubectl wait --timeout=180s --for=condition=ready pod --all -n kube-system
      - until kubectl get serviceaccount default > /dev/null 2>&1; do echo "waiting for control-plane" && sleep 1; done
      # finally, run the e2e tests
      - tests/e2e-kfddistribution.sh

  - name: delete-kind-cluster
    image: quay.io/sighup/dind-kind-kubectl-kustomize:0.20.0_1.29.1_3.10.0
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    environment:
      CLUSTER_NAME: ${DRONE_REPO_NAME}-${DRONE_BUILD_NUMBER}
    commands:
      # does not matter if the command fails
      - kind delete cluster --name $${CLUSTER_NAME} || true
    depends_on:
      - e2e-kfddistribution
    when:
      status:
        - success
        - failure

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

---
name: release
kind: pipeline
type: docker

depends_on:
  - e2e-kubernetes-1.27

platform:
  os: linux
  arch: amd64

trigger:
  ref:
    include:
      - refs/tags/**
    exclude:
      - refs/tags/**-docs*

steps:
  - name: prepare-release-manifests
    image: quay.io/sighup/e2e-testing:1.1.0_0.7.0_3.1.1_1.9.4_1.24.1_3.8.7_4.21.1
    pull: always
    depends_on: [clone]
    environment:
      RELEASE_MANIFESTS_PATH: fury-distribution-${DRONE_TAG}.yml
    commands:
      - furyctl vendor -H
      - kustomize build . > $${RELEASE_MANIFESTS_PATH}
    when:
      ref:
        include:
          - refs/tags/**
        exclude:
          - refs/tags/**-docs*

  - name: prepare-release-notes
    image: quay.io/sighup/fury-release-notes-plugin:3.7_2.8.4
    depends_on: [clone]
    settings:
      release_notes_file_path: release-notes.md
    when:
      ref:
        include:
          - refs/tags/**
        exclude:
          - refs/tags/**-docs*

  - name: publish-prerelease
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-release-manifests
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: skip
      files:
        - fury-distribution-${DRONE_TAG}.yml
        - Furyfile.yaml
        - kustomization.yaml
        - kfd.yaml
      prerelease: true
      overwrite: true
      title: "Prerelease ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        include:
          - refs/tags/v**-rc**
        exclude:
          - refs/tags/**-docs*

  - name: publish-stable
    image: plugins/github-release
    pull: always
    depends_on:
      - prepare-release-manifests
      - prepare-release-notes
    settings:
      api_key:
        from_secret: github_token
      file_exists: skip
      files:
        - fury-distribution-${DRONE_TAG}.yml
        - Furyfile.yaml
        - kustomization.yaml
        - kfd.yaml
      prerelease: false
      overwrite: true
      title: "Release ${DRONE_TAG}"
      note: release-notes.md
      checksum:
        - md5
        - sha256
    when:
      ref:
        exclude:
          - refs/tags/v**-rc**
          - refs/tags/**-docs*
        include:
          - refs/tags/v**
