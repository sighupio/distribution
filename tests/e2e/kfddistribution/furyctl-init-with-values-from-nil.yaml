# Copyright (c) 2017-present SIGHUP s.r.l All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.

---
apiVersion: kfd.sighup.io/v1alpha2
kind: KFDDistribution
metadata:
  name: sighup
spec:
  distributionVersion: v1.29.0
  # This section describes how the KFD distribution will be installed
  distribution:
    kubeconfig: "{env://KUBECONFIG}"
    # This common configuration will be applied to all the packages that will be installed in the cluster
    common: {}
    # This section contains all the configurations for all the KFD core modules
    modules:
      networking: 
        type: calico
      # This section contains all the configurations for the ingress module
      ingress:
        baseDomain: fury.sighup.cc
        nginx:
          type: single
          tls:
            provider: certManager
        certManager:
          clusterIssuer:
            name: letsencrypt-fury
            email: sighup@sighup.cc
            type: http01
      logging:
        type: loki
        loki: 
          backend: externalEndpoint
          externalEndpoint:
            endpoint: 192.168.1.100:9000
            insecure: true
            accessKeyId: minio
            secretAccessKey: supersecretpassword
            bucketName: loki
      monitoring:
        type: mimir
        mimir: 
          backend: externalEndpoint
          externalEndpoint:
            endpoint: 192.168.1.100:9000
            insecure: true
            accessKeyId: minio
            secretAccessKey: supersecretpassword
            bucketName: mimir
      tracing:
        type: tempo
        tempo: 
          backend: externalEndpoint
          externalEndpoint:
            endpoint: 192.168.1.100:9000
            insecure: true
            accessKeyId: minio
            secretAccessKey: supersecretpassword
            bucketName: tempo
      policy:
        type: kyverno
        kyverno:
          additionalExcludedNamespaces: ["local-path-storage"]
          installDefaultPolicies: false
          validationFailureAction: enforce
      dr:
        type: on-premises
        velero: 
          backend: externalEndpoint
          externalEndpoint:
            endpoint: 192.168.1.100:9000
            insecure: true
            accessKeyId: minio
            secretAccessKey: supersecretpassword
            bucketName: velero
      auth:
        provider:
          type: none
    customPatches:
      patchesStrategicMerge:
        - |
          apiVersion: apps/v1
          kind: StatefulSet
          metadata:
            name: minio-logging
            namespace: logging
          spec:
            template:
              spec:
                containers:
                - name: minio
                  resources:
                    requests:
                      cpu: 10m
                      memory: 50Mi
        - |
          $patch: delete
          apiVersion: logging-extensions.banzaicloud.io/v1alpha1
          kind: HostTailer
          metadata:
            name: systemd-common
            namespace: logging
        - |
          $patch: delete
          apiVersion: logging-extensions.banzaicloud.io/v1alpha1
          kind: HostTailer
          metadata:
            name: systemd-etcd
            namespace: logging
        - |
          $patch: delete
          apiVersion: apps/v1
          kind: DaemonSet
          metadata:
            name: x509-certificate-exporter-control-plane
            namespace: monitoring